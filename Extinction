{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":2263110,"sourceType":"datasetVersion","datasetId":1362209}],"dockerImageVersionId":30097,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# HISTORY","metadata":{}},{"cell_type":"markdown","source":"* The IUCN Red List of Threatened Speciesâ„¢ is the world's most comprehensive inventory of the global conservation status of plant and animal species. It uses a set of quantitative criteria to evaluate the extinction risk of thousands of species.","metadata":{}},{"cell_type":"markdown","source":"# PACKAGES AND LIBRARIES","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"}},{"cell_type":"code","source":"#GENERAL\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport random\n#PATH PROCESS\nimport os\nimport os.path\nfrom pathlib import Path\nimport glob\n#IMAGE PROCESS\nfrom PIL import Image\nfrom keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport cv2\nfrom keras.applications.vgg16 import preprocess_input, decode_predictions\nfrom keras.preprocessing import image\nimport skimage\nfrom skimage.feature import hessian_matrix, hessian_matrix_eigvals\nfrom scipy.ndimage.filters import convolve\nfrom skimage import data, io, filters\n#SCALER & TRANSFORMATION\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom keras.utils.np_utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom keras import regularizers\nfrom sklearn.preprocessing import LabelEncoder\n#ACCURACY CONTROL\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.metrics import mean_squared_error, r2_score\n#OPTIMIZER\nfrom keras.optimizers import RMSprop,Adam,Optimizer,Optimizer, SGD\n#MODEL LAYERS\nfrom tensorflow.keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D, BatchNormalization,MaxPooling2D,BatchNormalization,\\\n                        Permute, TimeDistributed, Bidirectional,GRU, SimpleRNN, LSTM, GlobalAveragePooling2D, SeparableConv2D,\\\nZeroPadding2D, Convolution2D, ZeroPadding2D, ReLU\nfrom keras import models\nfrom keras import layers\nimport tensorflow as tf\nfrom keras.applications import VGG16,VGG19,inception_v3\nfrom keras import backend as K\nfrom keras.utils import plot_model\nfrom keras.models import load_model\nfrom keras.regularizers import l1,l2,L1L2\n#SKLEARN CLASSIFIER\nfrom xgboost import XGBClassifier, XGBRegressor\nfrom lightgbm import LGBMClassifier, LGBMRegressor\nfrom catboost import CatBoostClassifier, CatBoostRegressor\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.ensemble import RandomForestClassifier, RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingClassifier, GradientBoostingRegressor\nfrom sklearn.ensemble import BaggingRegressor\nfrom sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor\nfrom sklearn.neural_network import MLPClassifier, MLPRegressor\nfrom sklearn.neighbors import KNeighborsClassifier, KNeighborsRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.cross_decomposition import PLSRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import LassoCV\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.linear_model import ElasticNetCV\n#IGNORING WARNINGS\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:17.557756Z","iopub.execute_input":"2021-05-24T10:47:17.558129Z","iopub.status.idle":"2021-05-24T10:47:26.276472Z","shell.execute_reply.started":"2021-05-24T10:47:17.558052Z","shell.execute_reply":"2021-05-24T10:47:26.275639Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# PATH, LABEL, TRANSFORMATION","metadata":{}},{"cell_type":"markdown","source":"#### MAIN PATH","metadata":{}},{"cell_type":"code","source":"Main_Animal_Path = Path(\"../input/danger-of-extinction-animal-image-set/Danger Of Extinction\")","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:26.277886Z","iopub.execute_input":"2021-05-24T10:47:26.278197Z","iopub.status.idle":"2021-05-24T10:47:26.284316Z","shell.execute_reply.started":"2021-05-24T10:47:26.278165Z","shell.execute_reply":"2021-05-24T10:47:26.283615Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### ANIMAL PATH","metadata":{}},{"cell_type":"code","source":"Animal_JPG = list(Main_Animal_Path.glob(r\"*/*.jpg\"))","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:26.286899Z","iopub.execute_input":"2021-05-24T10:47:26.287147Z","iopub.status.idle":"2021-05-24T10:47:26.600727Z","shell.execute_reply.started":"2021-05-24T10:47:26.287125Z","shell.execute_reply":"2021-05-24T10:47:26.599913Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### ANIMAL LABELS","metadata":{}},{"cell_type":"code","source":"Animal_Labels = list(map(lambda x: os.path.split(os.path.split(x)[0])[1],Animal_JPG))","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:26.60292Z","iopub.execute_input":"2021-05-24T10:47:26.603175Z","iopub.status.idle":"2021-05-24T10:47:26.638813Z","shell.execute_reply.started":"2021-05-24T10:47:26.603151Z","shell.execute_reply":"2021-05-24T10:47:26.638098Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### TO SERIES","metadata":{}},{"cell_type":"code","source":"Animal_JPG_Series = pd.Series(Animal_JPG,name=\"JPG\").astype(str)\nAnimal_Labels_Series = pd.Series(Animal_Labels,name=\"CATEGORY\")","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:26.640025Z","iopub.execute_input":"2021-05-24T10:47:26.640358Z","iopub.status.idle":"2021-05-24T10:47:26.651397Z","shell.execute_reply.started":"2021-05-24T10:47:26.640326Z","shell.execute_reply":"2021-05-24T10:47:26.650684Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### TO DATAFRAME","metadata":{}},{"cell_type":"code","source":"Main_Train_Data = pd.concat([Animal_JPG_Series,Animal_Labels_Series],axis=1)","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:26.654147Z","iopub.execute_input":"2021-05-24T10:47:26.654391Z","iopub.status.idle":"2021-05-24T10:47:26.663057Z","shell.execute_reply.started":"2021-05-24T10:47:26.654368Z","shell.execute_reply":"2021-05-24T10:47:26.662206Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(Main_Train_Data.head(-1))","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:26.664217Z","iopub.execute_input":"2021-05-24T10:47:26.664797Z","iopub.status.idle":"2021-05-24T10:47:26.683351Z","shell.execute_reply.started":"2021-05-24T10:47:26.664732Z","shell.execute_reply":"2021-05-24T10:47:26.68241Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### SHUFFLE","metadata":{}},{"cell_type":"code","source":"Main_Train_Data = Main_Train_Data.sample(frac=1).reset_index(drop=True)","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:26.686443Z","iopub.execute_input":"2021-05-24T10:47:26.686896Z","iopub.status.idle":"2021-05-24T10:47:26.693308Z","shell.execute_reply.started":"2021-05-24T10:47:26.686864Z","shell.execute_reply":"2021-05-24T10:47:26.692466Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(Main_Train_Data.head(-1))","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:26.69653Z","iopub.execute_input":"2021-05-24T10:47:26.69684Z","iopub.status.idle":"2021-05-24T10:47:26.706705Z","shell.execute_reply.started":"2021-05-24T10:47:26.696816Z","shell.execute_reply":"2021-05-24T10:47:26.70586Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### CHECKING","metadata":{}},{"cell_type":"code","source":"plt.style.use(\"classic\")","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:26.709668Z","iopub.execute_input":"2021-05-24T10:47:26.710119Z","iopub.status.idle":"2021-05-24T10:47:26.716707Z","shell.execute_reply.started":"2021-05-24T10:47:26.710086Z","shell.execute_reply":"2021-05-24T10:47:26.715865Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(Main_Train_Data[\"CATEGORY\"].value_counts())","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:26.71953Z","iopub.execute_input":"2021-05-24T10:47:26.719796Z","iopub.status.idle":"2021-05-24T10:47:26.732169Z","shell.execute_reply.started":"2021-05-24T10:47:26.719768Z","shell.execute_reply":"2021-05-24T10:47:26.731352Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Main_Train_Data[\"CATEGORY\"].hist(figsize=(17,8))\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:26.734284Z","iopub.execute_input":"2021-05-24T10:47:26.73478Z","iopub.status.idle":"2021-05-24T10:47:27.116249Z","shell.execute_reply.started":"2021-05-24T10:47:26.734746Z","shell.execute_reply":"2021-05-24T10:47:27.115407Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Main_Train_Data[\"CATEGORY\"].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(15,8))\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:27.117532Z","iopub.execute_input":"2021-05-24T10:47:27.117886Z","iopub.status.idle":"2021-05-24T10:47:27.339589Z","shell.execute_reply.started":"2021-05-24T10:47:27.11785Z","shell.execute_reply":"2021-05-24T10:47:27.338842Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# VISUALIZATION","metadata":{}},{"cell_type":"code","source":"Amur_Leopard = Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"Amur_Leopard\"]\nLion = Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"Lion\"]\nPanda = Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"Panda\"]\nChimpanzee = Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"Chimpanzee\"]\nRhino = Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"Rhino\"]\nCheetahs = Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"cheetahs\"]\nJaguars = Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"Jaguars\"]\nPanthers = Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"Panthers\"]\nOrangutan = Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"Orangutan\"]\nAfrican_Elephant = Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"African_Elephant\"]\nArctic_Fox = Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"Arctic_Fox\"]\n\nAmur_Leopard = Amur_Leopard.reset_index()\nLion = Lion.reset_index()\nPanda = Panda.reset_index()\nChimpanzee = Chimpanzee.reset_index()\nRhino = Rhino.reset_index()\nCheetahs = Cheetahs.reset_index()\nJaguars = Jaguars.reset_index()\nPanthers = Panthers.reset_index()\nOrangutan = Orangutan.reset_index()\nAfrican_Elephant = African_Elephant.reset_index()\nArctic_Fox = Arctic_Fox.reset_index()","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:27.340643Z","iopub.execute_input":"2021-05-24T10:47:27.340984Z","iopub.status.idle":"2021-05-24T10:47:27.369947Z","shell.execute_reply.started":"2021-05-24T10:47:27.340948Z","shell.execute_reply":"2021-05-24T10:47:27.369203Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Example_Leopard = cv2.imread(Amur_Leopard[\"JPG\"][80])\nExample_Lion = cv2.imread(Lion[\"JPG\"][80])\nExample_Panda = cv2.imread(Panda[\"JPG\"][80])\nExample_Chimpanzee = cv2.imread(Chimpanzee[\"JPG\"][80])\nExample_Rhino = cv2.imread(Rhino[\"JPG\"][80])\nExample_Cheetahs = cv2.imread(Cheetahs[\"JPG\"][80])\nExample_Jaguars = cv2.imread(Jaguars[\"JPG\"][80])\nExample_Panthers = cv2.imread(Panthers[\"JPG\"][80])\nExample_Orangutan = cv2.imread(Orangutan[\"JPG\"][80])\nExample_African_Elephant = cv2.imread(African_Elephant[\"JPG\"][80])\nExample_Arctic_Fox = cv2.imread(Arctic_Fox[\"JPG\"][80])","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:27.37105Z","iopub.execute_input":"2021-05-24T10:47:27.371382Z","iopub.status.idle":"2021-05-24T10:47:27.465184Z","shell.execute_reply.started":"2021-05-24T10:47:27.371348Z","shell.execute_reply":"2021-05-24T10:47:27.46445Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"animal_list = [Example_Leopard,Example_Lion,Example_Panda,\n              Example_Chimpanzee,Example_Rhino,Example_Cheetahs,\n              Example_Jaguars,Example_Panthers,Example_Orangutan,\n              Example_African_Elephant,Example_Arctic_Fox]","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:27.466331Z","iopub.execute_input":"2021-05-24T10:47:27.466939Z","iopub.status.idle":"2021-05-24T10:47:27.473127Z","shell.execute_reply.started":"2021-05-24T10:47:27.466903Z","shell.execute_reply":"2021-05-24T10:47:27.472381Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"figure,axis = plt.subplots(2,5,figsize=(18,10))\n\nfor i,ax in enumerate(axis.flat):\n    \n    Pick_IMG = animal_list[i]\n    Pick_IMG = cv2.cvtColor(Pick_IMG,cv2.COLOR_BGR2RGB)\n    ax.set_xlabel(Pick_IMG.shape)\n    ax.set_ylabel(Pick_IMG.size)\n    ax.imshow(Pick_IMG)\n\nplt.tight_layout()\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:27.474537Z","iopub.execute_input":"2021-05-24T10:47:27.474934Z","iopub.status.idle":"2021-05-24T10:47:28.74681Z","shell.execute_reply.started":"2021-05-24T10:47:27.474898Z","shell.execute_reply":"2021-05-24T10:47:28.746028Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"figure,axis = plt.subplots(5,5,figsize=(18,10))\n\nfor i,ax in enumerate(axis.flat):\n    \n    Pick_IMG = cv2.imread(Main_Train_Data[\"JPG\"][i])\n    Pick_IMG = cv2.cvtColor(Pick_IMG,cv2.COLOR_BGR2RGB)\n    ax.set_xlabel(Pick_IMG.shape)\n    ax.set_ylabel(Pick_IMG.size)\n    ax.set_title(Main_Train_Data[\"CATEGORY\"][i])\n    ax.imshow(Pick_IMG)\n\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:28.747976Z","iopub.execute_input":"2021-05-24T10:47:28.748425Z","iopub.status.idle":"2021-05-24T10:47:31.726162Z","shell.execute_reply.started":"2021-05-24T10:47:28.748388Z","shell.execute_reply":"2021-05-24T10:47:31.725422Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# SPLITTING TEST AND TRAIN","metadata":{}},{"cell_type":"code","source":"Train_Data,Test_Data = train_test_split(Main_Train_Data,train_size=0.9,random_state=42,shuffle=True)","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:31.727547Z","iopub.execute_input":"2021-05-24T10:47:31.728065Z","iopub.status.idle":"2021-05-24T10:47:31.734808Z","shell.execute_reply.started":"2021-05-24T10:47:31.728027Z","shell.execute_reply":"2021-05-24T10:47:31.73405Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(Train_Data.shape)","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:31.736066Z","iopub.execute_input":"2021-05-24T10:47:31.73653Z","iopub.status.idle":"2021-05-24T10:47:31.746906Z","shell.execute_reply.started":"2021-05-24T10:47:31.736497Z","shell.execute_reply":"2021-05-24T10:47:31.745885Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(Test_Data.shape)","metadata":{"execution":{"iopub.status.busy":"2021-05-24T10:47:31.748254Z","iopub.execute_input":"2021-05-24T10:47:31.74889Z","iopub.status.idle":"2021-05-24T10:47:31.757451Z","shell.execute_reply.started":"2021-05-24T10:47:31.748853Z","shell.execute_reply":"2021-05-24T10:47:31.756665Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# IMAGE GENERATOR PROCESS","metadata":{}},{"cell_type":"markdown","source":"#### STRUCTURE","metadata":{}},{"cell_type":"code","source":"Train_Image_Generator = ImageDataGenerator(rescale=1./255,\n                                          zoom_range=0.3,\n                                          shear_range=0.2,\n                                          rotation_range=25,\n                                          height_shift_range=0.2,\n                                          width_shift_range=0.2,\n                                          horizontal_flip=True,\n                                          validation_split=0.1,\n                                           brightness_range=[0.3,0.9],\n                                           channel_shift_range=0.2)","metadata":{"execution":{"iopub.status.busy":"2021-05-24T11:14:08.104896Z","iopub.execute_input":"2021-05-24T11:14:08.105218Z","iopub.status.idle":"2021-05-24T11:14:08.110082Z","shell.execute_reply.started":"2021-05-24T11:14:08.105188Z","shell.execute_reply":"2021-05-24T11:14:08.109128Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Test_Image_Generator = ImageDataGenerator(rescale=1./255)","metadata":{"execution":{"iopub.status.busy":"2021-05-24T11:14:08.267395Z","iopub.execute_input":"2021-05-24T11:14:08.267679Z","iopub.status.idle":"2021-05-24T11:14:08.271938Z","shell.execute_reply.started":"2021-05-24T11:14:08.267652Z","shell.execute_reply":"2021-05-24T11:14:08.270858Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### HOW TO LOOK BY GENERATOR","metadata":{}},{"cell_type":"code","source":"Example_IMG = cv2.imread(Main_Train_Data[\"JPG\"][44])\nTransformation_IMG = cv2.cvtColor(Example_IMG,cv2.COLOR_BGR2RGB)\nArray_IMG = image.img_to_array(Transformation_IMG)\nArray_IMG = Array_IMG.reshape((1,) + Array_IMG.shape)\n\ni = 0\n\nfor batch in Train_Image_Generator.flow(Array_IMG,batch_size=32):\n    plt.figure(i)\n    \n    Image_Pick = plt.imshow(image.img_to_array(batch[0]))\n    \n    i += 1\n    \n    if i % 4 == 0:\n        break\n        \nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-05-24T11:14:08.656098Z","iopub.execute_input":"2021-05-24T11:14:08.656381Z","iopub.status.idle":"2021-05-24T11:14:09.422595Z","shell.execute_reply.started":"2021-05-24T11:14:08.656354Z","shell.execute_reply":"2021-05-24T11:14:09.421601Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### APPLY","metadata":{}},{"cell_type":"code","source":"Train_IMG_Set = Train_Image_Generator.flow_from_dataframe(dataframe=Train_Data,\n                                                         x_col=\"JPG\",\n                                                         y_col=\"CATEGORY\",\n                                                         target_size=(180,180),\n                                                         color_mode=\"rgb\",\n                                                         class_mode=\"categorical\",\n                                                         subset=\"training\")","metadata":{"execution":{"iopub.status.busy":"2021-05-24T11:14:09.424152Z","iopub.execute_input":"2021-05-24T11:14:09.424513Z","iopub.status.idle":"2021-05-24T11:14:09.526662Z","shell.execute_reply.started":"2021-05-24T11:14:09.424477Z","shell.execute_reply":"2021-05-24T11:14:09.525936Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Validation_IMG_Set = Train_Image_Generator.flow_from_dataframe(dataframe=Train_Data,\n                                                         x_col=\"JPG\",\n                                                         y_col=\"CATEGORY\",\n                                                         target_size=(180,180),\n                                                         color_mode=\"rgb\",\n                                                         class_mode=\"categorical\",\n                                                         subset=\"validation\")","metadata":{"execution":{"iopub.status.busy":"2021-05-24T11:14:09.528299Z","iopub.execute_input":"2021-05-24T11:14:09.528666Z","iopub.status.idle":"2021-05-24T11:14:09.584993Z","shell.execute_reply.started":"2021-05-24T11:14:09.52863Z","shell.execute_reply":"2021-05-24T11:14:09.584238Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Test_IMG_Set = Test_Image_Generator.flow_from_dataframe(dataframe=Test_Data,\n                                                         x_col=\"JPG\",\n                                                         y_col=\"CATEGORY\",\n                                                         target_size=(180,180),\n                                                         color_mode=\"rgb\",\n                                                         class_mode=\"categorical\",\n                                                         shuffle=False)","metadata":{"execution":{"iopub.status.busy":"2021-05-24T11:14:09.586415Z","iopub.execute_input":"2021-05-24T11:14:09.586744Z","iopub.status.idle":"2021-05-24T11:14:09.790287Z","shell.execute_reply.started":"2021-05-24T11:14:09.586712Z","shell.execute_reply":"2021-05-24T11:14:09.789577Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(\"TRAIN: \")\nprint(Train_IMG_Set.class_indices)\nprint(Train_IMG_Set.classes[0:5])\nprint(Train_IMG_Set.image_shape)\nprint(\"---\"*20)\nprint(\"VALIDATION: \")\nprint(Validation_IMG_Set.class_indices)\nprint(Validation_IMG_Set.classes[0:5])\nprint(Validation_IMG_Set.image_shape)\nprint(\"---\"*20)\nprint(\"TEST: \")\nprint(Test_IMG_Set.class_indices)\nprint(Test_IMG_Set.classes[0:5])\nprint(Test_IMG_Set.image_shape)","metadata":{"execution":{"iopub.status.busy":"2021-05-24T11:14:09.791385Z","iopub.execute_input":"2021-05-24T11:14:09.791797Z","iopub.status.idle":"2021-05-24T11:14:09.801984Z","shell.execute_reply.started":"2021-05-24T11:14:09.791761Z","shell.execute_reply":"2021-05-24T11:14:09.800437Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# MODEL","metadata":{}},{"cell_type":"code","source":"Model = Sequential()\n\nModel.add(Conv2D(24,(3,3),activation=\"relu\",input_shape=(180,180,3)))\nModel.add(BatchNormalization())\nModel.add(MaxPooling2D((2,2),strides=2))\n\nModel.add(Conv2D(64,(3,3),activation=\"relu\",padding=\"same\"))\nModel.add(Dropout(0.3))\nModel.add(MaxPooling2D((2,2),strides=2))\n\nModel.add(Conv2D(64,(3,3),activation=\"relu\",padding=\"same\"))\nModel.add(Dropout(0.3))\nModel.add(MaxPooling2D((2,2),strides=2))\n\nModel.add(Conv2D(128,(3,3),activation=\"relu\",padding=\"same\"))\nModel.add(Conv2D(128,(3,3),activation=\"relu\",padding=\"same\"))\nModel.add(Dropout(0.3))\nModel.add(MaxPooling2D((2,2),strides=2))\n\nModel.add(Conv2D(256,(3,3),activation=\"relu\",padding=\"same\"))\nModel.add(Dropout(0.3))\nModel.add(MaxPooling2D((2,2),strides=2))\n\nModel.add(Flatten())\nModel.add(Dense(2352,activation=\"relu\"))\nModel.add(Dropout(0.5))\nModel.add(Dense(11,activation=\"softmax\"))","metadata":{"execution":{"iopub.status.busy":"2021-05-24T12:02:39.983952Z","iopub.execute_input":"2021-05-24T12:02:39.984295Z","iopub.status.idle":"2021-05-24T12:02:40.101143Z","shell.execute_reply.started":"2021-05-24T12:02:39.984266Z","shell.execute_reply":"2021-05-24T12:02:40.100278Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"early_stop = tf.keras.callbacks.EarlyStopping(monitor=\"loss\",patience=3,mode=\"min\")","metadata":{"execution":{"iopub.status.busy":"2021-05-24T12:02:40.129702Z","iopub.execute_input":"2021-05-24T12:02:40.129957Z","iopub.status.idle":"2021-05-24T12:02:40.136131Z","shell.execute_reply.started":"2021-05-24T12:02:40.129933Z","shell.execute_reply":"2021-05-24T12:02:40.135332Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Model.compile(loss=\"categorical_crossentropy\",optimizer=\"adam\",metrics=[\"accuracy\"])","metadata":{"execution":{"iopub.status.busy":"2021-05-24T12:02:40.207461Z","iopub.execute_input":"2021-05-24T12:02:40.207729Z","iopub.status.idle":"2021-05-24T12:02:40.21885Z","shell.execute_reply.started":"2021-05-24T12:02:40.207706Z","shell.execute_reply":"2021-05-24T12:02:40.217848Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"CNN_Model = Model.fit(Train_IMG_Set,validation_data=Validation_IMG_Set,epochs=100,callbacks=early_stop)","metadata":{"execution":{"iopub.status.busy":"2021-05-24T12:02:40.290762Z","iopub.execute_input":"2021-05-24T12:02:40.290999Z","iopub.status.idle":"2021-05-24T12:50:37.715008Z","shell.execute_reply.started":"2021-05-24T12:02:40.290977Z","shell.execute_reply":"2021-05-24T12:50:37.714159Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Grap_Data = pd.DataFrame(CNN_Model.history)\nfigure = plt.figure(figsize=(10,10))\n\nGrap_Data.plot()","metadata":{"execution":{"iopub.status.busy":"2021-05-24T12:50:37.718278Z","iopub.execute_input":"2021-05-24T12:50:37.718537Z","iopub.status.idle":"2021-05-24T12:50:37.887102Z","shell.execute_reply.started":"2021-05-24T12:50:37.718509Z","shell.execute_reply":"2021-05-24T12:50:37.886163Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.plot(CNN_Model.history[\"accuracy\"])\nplt.plot(CNN_Model.history[\"val_accuracy\"])\nplt.ylabel(\"ACCURACY\")\nplt.legend()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-05-24T12:50:37.889032Z","iopub.execute_input":"2021-05-24T12:50:37.889376Z","iopub.status.idle":"2021-05-24T12:50:38.031971Z","shell.execute_reply.started":"2021-05-24T12:50:37.88934Z","shell.execute_reply":"2021-05-24T12:50:38.031069Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.plot(CNN_Model.history[\"loss\"])\nplt.plot(CNN_Model.history[\"val_loss\"])\nplt.ylabel(\"LOSS\")\nplt.legend()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-05-24T12:50:38.033429Z","iopub.execute_input":"2021-05-24T12:50:38.03379Z","iopub.status.idle":"2021-05-24T12:50:38.161918Z","shell.execute_reply.started":"2021-05-24T12:50:38.033755Z","shell.execute_reply":"2021-05-24T12:50:38.161003Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Model_Results = Model.evaluate(Test_IMG_Set)\nprint(\"LOSS:  \" + \"%.4f\" % Model_Results[0])\nprint(\"ACCURACY:  \" + \"%.4f\" % Model_Results[1])","metadata":{"execution":{"iopub.status.busy":"2021-05-24T12:50:38.163267Z","iopub.execute_input":"2021-05-24T12:50:38.163618Z","iopub.status.idle":"2021-05-24T12:50:41.17919Z","shell.execute_reply.started":"2021-05-24T12:50:38.163584Z","shell.execute_reply":"2021-05-24T12:50:41.17839Z"},"trusted":true},"execution_count":null,"outputs":[]}]}